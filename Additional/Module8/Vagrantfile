
Vagrant.configure("2") do |config|

  config.vm.box = "bento/centos-7.5"


  config.vm.provider "virtualbox" do |vb|
  # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.memory = 1024
    vb.cpus = 4
  end

  #
  # Tomcat instances (not more that 243)
  #
  TOMCAT_COUNT = 2
  TOMCAT_NODES = Hash.new

  (1..TOMCAT_COUNT).each do |i|
    config.vm.define "tomcat#{i}" do |node|

      node.vm.hostname = "tomcat#{i}"
      # Create a private network, which allows host-only access to the machine using a specific IP.
      nodeIp = "192.168.0.#{10 + i}"
      node.vm.network "private_network", ip: nodeIp

      TOMCAT_NODES["#{node.vm.hostname}"] = nodeIp

      node.vm.provision "shell", inline: <<-SHELL

        echo "Install Tomcat #{i}"
        yum install java-1.8.0-openjdk -y
        yum install tomcat tomcat-webapps tomcat-admin-webapps -y
        systemctl enable tomcat
        
        echo 'Create web-app MyApp with index.html'
        [ ! -d "/usr/share/tomcat/webapps/MyApp" ] && mkdir /usr/share/tomcat/webapps/MyApp && echo "Folder MyApp has been created" || echo "Folder MyApp exists"
        export MY_APP_PATH=/usr/share/tomcat/webapps/MyApp/index.html

        echo 'Create or rewrite file index.html'
        > $MY_APP_PATH
        echo "<html>" >> $MY_APP_PATH
        echo "<head><title>Tomcat #{i}</title></head>" >> $MY_APP_PATH
        echo "<body style="color:green"><h1>Tomcat #{i}</h1></body>" >> $MY_APP_PATH
        echo "</html>" >> $MY_APP_PATH

        systemctl start tomcat

      SHELL

      # update hosts file
      node.vm.provision "shell", inline: <<-SHELL

        export HOSTS_FILE=/etc/hosts

        grep -q "my.loadbalancer" $HOSTS_FILE; [ $? -eq 0 ] && export HOSTS_FILE_IS_UP_TO_DATE=true || export HOSTS_FILE_IS_UP_TO_DATE=false
        echo 'Debug: HOSTS file for [#{node}] is up to date: ' $HOSTS_FILE_IS_UP_TO_DATE
  
        $HOSTS_FILE_IS_UP_TO_DATE || echo '192.168.0.10 my.loadbalancer' >> $HOSTS_FILE
        $HOSTS_FILE_IS_UP_TO_DATE || echo '192.168.0.10 my.nexusrepo' >> $HOSTS_FILE
        $HOSTS_FILE_IS_UP_TO_DATE || echo '192.168.0.10 my.jenkins' >> $HOSTS_FILE
        $HOSTS_FILE_IS_UP_TO_DATE || echo '192.168.0.10 my.influxdb' >> $HOSTS_FILE
        $HOSTS_FILE_IS_UP_TO_DATE || echo '192.168.0.10 my.logstash' >> $HOSTS_FILE
      SHELL

      # add collectd daemon
      node.vm.provision "shell", inline: <<-SHELL

        yum install epel-release -y
        yum install collectd -y

        export COLLECTD_CONF=/etc/collectd.conf

        grep -q "my.influxdb" $COLLECTD_CONF; [ $? -eq 0 ] && export COLLECTD_CONF_IS_UP_TO_DATE=true || export COLLECTD_CONF_IS_UP_TO_DATE=false
        echo 'Debug: collectd.conf file for [#{node}] is up to date: ' $COLLECTD_CONF_IS_UP_TO_DATE
  
        $COLLECTD_CONF_IS_UP_TO_DATE || echo '<Plugin network>' >> $COLLECTD_CONF
        $COLLECTD_CONF_IS_UP_TO_DATE || echo 'Server "my.influxdb" "25826"' >> $COLLECTD_CONF
        $COLLECTD_CONF_IS_UP_TO_DATE || echo '</Plugin>' >> $COLLECTD_CONF

        systemctl start collectd
        systemctl enable collectd

      SHELL

 
      # add filebeat daemon
      node.vm.provision "shell", inline: <<-SHELL

        yum install -y https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.5.0-x86_64.rpm
        
        export FILEBEAT_CONF=/etc/filebeat/filebeat.yml

        grep -q "my.logstash" $FILEBEAT_CONF; [ $? -eq 0 ] && export FILEBEAT_CONF_IS_UP_TO_DATE=true || export FILEBEAT_CONF_IS_UP_TO_DATE=false
        echo 'Debug: filebeat.yml file for [#{node}] is up to date: ' $FILEBEAT_CONF_IS_UP_TO_DATE
  
        $FILEBEAT_CONF_IS_UP_TO_DATE || echo 'output.logstash:' >> $FILEBEAT_CONF
        $FILEBEAT_CONF_IS_UP_TO_DATE || echo '  hosts: ["my.logstash:5044"]' >> $FILEBEAT_CONF

        systemctl start filebeat
        systemctl enable filebeat

      SHELL

    end
  end


end
