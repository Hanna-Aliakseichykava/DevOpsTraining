pipeline {

    agent {
        label ""
    }

   environment {
     BASE_LOCAL_NEXUS_URL = "http://localhost:8081/nexus/content/repositories/snapshots"
     REMOTE_NEXUS_URL = "http://my.nexusrepo:8081/nexus/content/repositories/snapshots"
     VERSION = '0.0.0'
   }

    stages {

        stage('Clone sources') {
            steps {
                echo '..........................Clone or pull the repo..........................'
                git url: 'https://github.com/Hanna-Aliakseichykava/DevOpsTraining.git', branch: 'Module6'
            }
        }

        stage('Build war') {
            steps {
                echo '..........................Building war..........................'
                dir ('Module6/gradleSample') {
                    sh "ls"
                    sh "chmod +x ./gradlew"
                    sh './gradlew incrementMinorVersion'
                    sh './gradlew build'
                }
            }
        }

        stage('Upload war to Nexus') {
            steps {
                echo '..........................Uploading war..........................'

                script {
                        
                    def basePath = "${env.WORKSPACE}/Module6/gradleSample"
                    def artifactPath = "${basePath}/build/libs/app.war"
                    println "Debug: Path app path: ${basePath}"

                    Properties props = new Properties()
                    props.load(new File("${basePath}/gradle.properties").newDataInputStream())
                    String version = props.getProperty('version')
                    VERSION = version

                    String nexusUploadUrl = "${BASE_LOCAL_NEXUS_URL}/module6/${version}/app.war"
                    println "Debug: Nexus url: ${nexusUploadUrl}"

                    def response = sh(script: "curl --upload-file ${artifactPath} -u admin:admin123 -v ${nexusUploadUrl}", returnStdout: true)
                    println "=========================Response===================\n${response}"
                }

            }
        }

        stage('Deploy app on tomcat1') {
            steps {
                script {
                    tomcat1 = [:]
                    tomcat1.name = 'tomcat1'
                    tomcat1.host = 'tomcat1'
                    tomcat1.user = 'vagrant'
                    tomcat1.password = 'vagrant'
                    tomcat1.allowAnyHosts = true
                    
                    echo '..........................Deploy app on tomcat1..........................'
                    sshCommand remote: tomcat1, command: "sudo wget ${REMOTE_NEXUS_URL}/module6/${VERSION}/app.war -P /usr/share/tomcat/webapps"
                }
    
                
            }
        }

    }
}