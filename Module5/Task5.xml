<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.7"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.7">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.65">
    <script>
def incrementVersion() {
    
    def basePath = &quot;${env.WORKSPACE}/Module5&quot;
    File propsFile = new File(&quot;${basePath}/version.properties&quot;)
    Properties props = new Properties()
    props.load(propsFile.newDataInputStream())

    String version = props.getProperty(&apos;version&apos;)
    println &quot;Old version: &quot; + version

    version = incrementMinorVersion(version)
    println &quot;New version: &quot; + version

    props.setProperty(&apos;version&apos;, version)
    props.store(propsFile.newWriter(), null)

    return version               
}

def incrementMinorVersion(version) {

    String minorVersion = version.substring(version.lastIndexOf(&apos;.&apos;) + 1) //get last part of the version
    int minor = minorVersion.toInteger() + 1
    String newVersion = version.substring(0, version.lastIndexOf(&apos;.&apos;)) + &apos;.&apos; + minor
    return newVersion
}


pipeline {

    agent {
        label &quot;&quot;
    }

   environment {
     VERSION = &apos;0.0.0&apos;

     OCTOPUS_SERVER_URL = &quot;http://localhost&quot;

     API_KEY = &quot;API-VLNMFTBNKI0DV1VY8MONKIAHG84&quot;
   }

    stages {

        stage(&apos;Clone sources&apos;) {
            steps {
                echo &apos;..........................Clone or pull the repo..........................&apos;
                git url: &apos;https://github.com/Hanna-Aliakseichykava/DevOpsTraining.git&apos;, branch: &apos;Module5&apos;
            }
        }

        stage(&apos;Increment version&apos;) {
            steps {
                echo &apos;..........................Increment Version..........................&apos;

                script {

                    VERSION = incrementVersion()
                }

            }
        }

         stage(&apos;Create Release&apos;) {
            steps {
                script {
                    
                    echo &apos;..........................Create Release..........................&apos;
                    dir (&quot;Module5/MusicStoreTest-master&quot;) {
                        bat &quot;dotnet publish --framework netcoreapp2.0&quot;
                        bat &quot;octo pack --id=\&quot;musicstore\&quot; --version=\&quot;${VERSION}\&quot;&quot;
                        bat &quot;octo push --package musicstore.${VERSION}.nupkg --replace-existing --server ${OCTOPUS_SERVER_URL} --apiKey ${API_KEY}&quot;
                        bat &quot;octo create-release --project MusicStore --server ${OCTOPUS_SERVER_URL} --apiKey ${API_KEY}&quot;
                    }
                }  
                
            }
        }
        

        stage(&apos;Push to the repo&apos;) {
            steps {
                script {
                    
                    bat &quot;git config --global user.email \&quot;aleks.anna.ur@gmail.com\&quot;&quot;
                    bat &quot;git config --global user.name \&quot;Anna\&quot;&quot;
  
                    bat &quot;git checkout Module5&quot;
                    bat &quot;git commit -am \&quot;Version is updated to ${VERSION}\&quot;&quot;

                    withCredentials([usernamePassword(credentialsId: &apos;gitcreds&apos;, usernameVariable: &apos;username&apos;, passwordVariable: &apos;password&apos;)]){
                          bat(&quot;git push http://$username:$password@github.com/Hanna-Aliakseichykava/DevOpsTraining Module5&quot;)
                    } 

                    bat &quot;git checkout master&quot;
                    bat &quot;git pull&quot;
                    bat &apos;git merge Module5&apos;

                    withCredentials([usernamePassword(credentialsId: &apos;gitcreds&apos;, usernameVariable: &apos;username&apos;, passwordVariable: &apos;password&apos;)]){
                          bat(&quot;git push http://$username:$password@github.com/Hanna-Aliakseichykava/DevOpsTraining master&quot;)
                    }  
                }  
                
            }
        }


    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>